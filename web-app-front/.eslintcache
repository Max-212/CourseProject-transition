[{"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\index.js":"1","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\App.js":"2","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\Header.js":"3","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\NotAuthorizedMenu.js":"4","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\context.js":"5","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\AuthorizedMenu.js":"6","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Auth\\Authorization.js":"7","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\AuthService.js":"8","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Spinner.js":"9","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\Home.js":"10","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Auth\\Registration.js":"11","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UserPage.js":"12","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\CreateCollection.js":"13","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\Field.js":"14","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\CollectionService.js":"15","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\helpers\\authHeader.js":"16","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\UploadImage.js":"17","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\ImageService.js":"18","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\CollectionList.js":"19","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\CollectionPreview.js":"20","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\CollectionView.js":"21","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\CollectionUserPanel.js":"22","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UpdateCollection\\UpdateCollection.js":"23","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UpdateCollection\\Field.js":"24","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemsPage.js":"25","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemsUserPanel.js":"26","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\CreateItem.js":"27","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemForm.js":"28","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\Field.js":"29","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\ItemService.js":"30","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemsList.js":"31","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemPreview.js":"32","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemView.js":"33","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemUserPanel.js":"34","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\UpdateItem.js":"35","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\FieldsView.js":"36","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\TagList.js":"37","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\Tag.js":"38","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\Comments.js":"39","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\SearchItemsPage.js":"40","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\TagListHome.js":"41","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\CollectionsList.js":"42","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\ItemsList.js":"43"},{"size":176,"mtime":1610980363964,"results":"44","hashOfConfig":"45"},{"size":2277,"mtime":1612106192049,"results":"46","hashOfConfig":"45"},{"size":1977,"mtime":1612106153272,"results":"47","hashOfConfig":"45"},{"size":547,"mtime":1611228576924,"results":"48","hashOfConfig":"45"},{"size":94,"mtime":1611060793826,"results":"49","hashOfConfig":"45"},{"size":1039,"mtime":1611218014651,"results":"50","hashOfConfig":"45"},{"size":3278,"mtime":1611167310747,"results":"51","hashOfConfig":"45"},{"size":1027,"mtime":1611169212001,"results":"52","hashOfConfig":"45"},{"size":327,"mtime":1611145753091,"results":"53","hashOfConfig":"45"},{"size":1546,"mtime":1612112153418,"results":"54","hashOfConfig":"45"},{"size":5635,"mtime":1611169844673,"results":"55","hashOfConfig":"45"},{"size":796,"mtime":1611413152435,"results":"56","hashOfConfig":"45"},{"size":4899,"mtime":1611328690874,"results":"57","hashOfConfig":"45"},{"size":1941,"mtime":1611241840914,"results":"58","hashOfConfig":"45"},{"size":2461,"mtime":1612007031844,"results":"59","hashOfConfig":"45"},{"size":234,"mtime":1611243444468,"results":"60","hashOfConfig":"45"},{"size":1490,"mtime":1611343477446,"results":"61","hashOfConfig":"45"},{"size":585,"mtime":1611328510898,"results":"62","hashOfConfig":"45"},{"size":1192,"mtime":1611654271181,"results":"63","hashOfConfig":"45"},{"size":1295,"mtime":1611419589156,"results":"64","hashOfConfig":"45"},{"size":2562,"mtime":1611914430941,"results":"65","hashOfConfig":"45"},{"size":1502,"mtime":1611567445886,"results":"66","hashOfConfig":"45"},{"size":6581,"mtime":1611691202394,"results":"67","hashOfConfig":"45"},{"size":2052,"mtime":1611694798483,"results":"68","hashOfConfig":"45"},{"size":2068,"mtime":1611664651431,"results":"69","hashOfConfig":"45"},{"size":302,"mtime":1611568390231,"results":"70","hashOfConfig":"45"},{"size":2053,"mtime":1611691223225,"results":"71","hashOfConfig":"45"},{"size":2599,"mtime":1611653742663,"results":"72","hashOfConfig":"45"},{"size":2118,"mtime":1611651861193,"results":"73","hashOfConfig":"45"},{"size":5060,"mtime":1612110182617,"results":"74","hashOfConfig":"45"},{"size":3018,"mtime":1611748914851,"results":"75","hashOfConfig":"45"},{"size":580,"mtime":1611752899780,"results":"76","hashOfConfig":"45"},{"size":4338,"mtime":1611944850659,"results":"77","hashOfConfig":"45"},{"size":1372,"mtime":1611776646395,"results":"78","hashOfConfig":"45"},{"size":2539,"mtime":1611850930614,"results":"79","hashOfConfig":"45"},{"size":1566,"mtime":1611916107072,"results":"80","hashOfConfig":"45"},{"size":1993,"mtime":1611923025600,"results":"81","hashOfConfig":"45"},{"size":920,"mtime":1612009778709,"results":"82","hashOfConfig":"45"},{"size":2882,"mtime":1611944493366,"results":"83","hashOfConfig":"45"},{"size":1398,"mtime":1612107648886,"results":"84","hashOfConfig":"45"},{"size":949,"mtime":1612003266520,"results":"85","hashOfConfig":"45"},{"size":1403,"mtime":1612007655883,"results":"86","hashOfConfig":"45"},{"size":1114,"mtime":1612111394849,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"kjph4b",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\index.js",[],["187","188"],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\App.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\Header.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\NotAuthorizedMenu.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\context.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Header\\AuthorizedMenu.js",["189","190"],"import React from 'react';\r\n\r\nfunction AuthorizedMenu(props)\r\n{\r\n    function LogOut()\r\n    {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    return(\r\n        <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <i className=\"fa fa-user\" aria-hidden=\"true\"></i> {props.user.username}\r\n                </a>\r\n                <div className=\"shadow dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <a className=\"dropdown-item\" href=\"/userPage\">Collections</a>\r\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                    <div className=\"dropdown-divider\"></div>\r\n                    <a className=\"dropdown-item\" href=\"/\" onClick = {LogOut}>Log Out</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default AuthorizedMenu;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Auth\\Authorization.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\AuthService.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Spinner.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\Home.js",["191","192","193","194"],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Auth\\Registration.js",["195","196"],"import React, { useContext } from 'react';\r\nimport AuthService from '../../services/AuthService'\r\nimport Spinner from '../Spinner';\r\nimport Context from '../../context'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst styles = \r\n{\r\n\r\n    maxWidth: \"500px\",\r\n    border: 'none'\r\n}\r\n\r\nfunction Registration(props)\r\n{\r\n    const [usernameError, setUsernameError] =  React.useState('');\r\n    const [passwordError, setPasswordError] =  React.useState('');\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [confirmPassword, setConfirmPassword] = React.useState('');\r\n    const [firstName, setFirstName] = React.useState('');\r\n    const [lastName, setLastName] = React.useState('');\r\n    const [loading , setLoading] = React.useState(false);\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    function validateForm() \r\n    {\r\n        return username.length > 0 && password.length > 0 && confirmPassword.length > 0\r\n        && firstName.length && lastName.length > 0;\r\n    }\r\n    \r\n    async function submitHandler(event)\r\n    {\r\n        event.preventDefault();\r\n        if(checkConfirmPassword())\r\n        {\r\n            setLoading(true);\r\n            setPasswordError('');\r\n            setUsernameError('');\r\n            let response = await AuthService.register(username, firstName, lastName, password);\r\n            if(response.status !== 200)\r\n            {\r\n                setLoading(false);\r\n                console.log(response);\r\n                if(response.data.errors.Password)\r\n                {\r\n                    setUsernameError('Password : ' + response.data.errors.Password[0]);\r\n                }\r\n                if(response.data.errors.UserName)\r\n                {\r\n                    setPasswordError('Username : ' + response.data.errors.UserName[0])\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setLoading(false);\r\n                setRedirect(true);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    function checkConfirmPassword() {\r\n        if(password !== confirmPassword)\r\n        {\r\n            setPasswordError('password and confirm password not matched');\r\n            return false;\r\n        }\r\n        return true;\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className= 'd-flex justify-content-center'>\r\n        <div className=\"shadow-lg card card-container mt-5 w-100\" style = {styles}>\r\n            <form className= 'p-5' onSubmit = {submitHandler}>\r\n                <div className=\"form-group mb-4\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <i className=\"fa fa-user mr-3\" aria-hidden=\"true\"></i>\r\n                        <input type=\"input\" className=\"form-control\" placeholder='Username'\r\n                            onChange={(e) => setUsername(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-4\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <i className=\"fa fa-user mr-3\" aria-hidden=\"true\"></i>\r\n                        <input type=\"input\" className=\"form-control\" placeholder='First Name'\r\n                            onChange={(e) => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-4\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <i className=\"fa fa-user mr-3\" aria-hidden=\"true\"></i>\r\n                        <input type=\"input\" className=\"form-control\" placeholder='Last Name'\r\n                            onChange={(e) => setLastName(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-4 w-100\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <i className=\"fa fa-lock mr-3\" aria-hidden=\"true\"></i>\r\n                        <input type=\"password\" className=\"form-control\" placeholder='Password'\r\n                            onChange={(e) => setPassword(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-4 w-100\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <i className=\"fa fa-lock mr-3\" aria-hidden=\"true\"></i>\r\n                        <input type=\"password\" className=\"form-control\" placeholder='Confirm password'\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-outline mb-4\">\r\n                    <input className=\"btn btn-outline-success w-100\" type='submit' value='Sign up' disabled={!validateForm()}/>\r\n                </div>\r\n\r\n                {usernameError && (\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {usernameError}\r\n                    </div>\r\n                </div>\r\n                )}\r\n\r\n                {passwordError && (\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {passwordError}\r\n                    </div>\r\n                </div>\r\n                )}\r\n\r\n                {loading &&(\r\n                    <Spinner/>\r\n                )}\r\n            </form>\r\n\r\n        </div>\r\n        {redirect &&(<Redirect to='/login'/>)}\r\n        </div>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default Registration;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UserPage.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\CreateCollection.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\Field.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\CollectionService.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\helpers\\authHeader.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\CreateCollection\\UploadImage.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\ImageService.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\CollectionList.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\CollectionPreview.js",["197","198"],"import React from 'react';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst divStyle = \r\n{\r\n    width : '252px',\r\n \r\n}\r\n\r\nconst imageStyle =\r\n{\r\n    width : '250px',\r\n    height : '150px'\r\n}\r\n\r\nfunction CollectionPreview(props)\r\n{\r\n    const [redirect, setRedirect] = React.useState(false);\r\n    //let history = useHistory();\r\n    let image = props.collection.image;\r\n    if(!image)\r\n    {\r\n        image = 'https://cdn.mouzenidis-travel.ru/userfiles/images/adaptive/no-photo-available.png'\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"card m-5 collection__preview\" style={divStyle} onClick = {e => {setRedirect(true)}}>\r\n            <img className=\"hvr-zoom card-img-top\" src={image} alt=\"Card image cap\" style = {imageStyle}></img>\r\n            <h5 class=\"card-header bg-transparent text-center\">{props.collection.title}</h5>\r\n            <div class=\"card-body d-flex flex-column justify-content-between\">\r\n                <p class=\"card-text\">Theme:&nbsp;{props.collection.theme}</p>\r\n                <p class=\"card-text\"><small class=\"text-muted\">Author:&nbsp;{props.collection.user.userName}</small></p>\r\n            </div>\r\n            {redirect && <Redirect to={`/collection/${props.collection.id}`} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionPreview;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\CollectionView.js",["199","200"],"import React, { useEffect, useContext } from 'react'\r\nimport { Redirect} from \"react-router-dom\";\r\nimport CollectionService from '../../services/CollectionService';\r\nimport Spinner from '../Spinner';\r\nimport CollectionUserPanel from '../UserPage/Collections/CollectionUserPanel'\r\nimport Context from '../../context'\r\nimport Markdown from 'react-markdown'\r\nconst imageStyle =\r\n{\r\n    maxWidth : '500px'\r\n}\r\n\r\nconst divStyle =\r\n{\r\n    maxWidth : '800px'\r\n}\r\n\r\nfunction CollectionView(props)\r\n{\r\n    \r\n    const {user} = useContext(Context);\r\n\r\n    const[loading,setLoading] = React.useState(false);\r\n    const[collection, setCollection] = React.useState(null);\r\n    const[userPanel, setUserPanel] = React.useState(false);\r\n    const[error, setError] = React.useState(false);\r\n    const[image, setImage] = React.useState('https://cdn.mouzenidis-travel.ru/userfiles/images/adaptive/no-photo-available.png');\r\n\r\n    useEffect(() =>\r\n    {\r\n        async function fetchData()\r\n        {\r\n            setLoading(true);\r\n            let response = await CollectionService.getCollection(props.match.params.id);\r\n            if(response.status === 200)\r\n            {\r\n                setCollection(response.data);\r\n                if(user && response.data.user.userName === user.username) setUserPanel(true); \r\n                if(response.data.image) setImage(response.data.image);\r\n            }\r\n            else\r\n            {\r\n                setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        if(!collection && !error) fetchData();\r\n    }, [user])\r\n    \r\n\r\n    return(\r\n        <>\r\n        {error && <Redirect to=\"/home\" />}\r\n        {userPanel && <CollectionUserPanel collection = {collection}/>}\r\n        {loading && <Spinner/>}\r\n        {collection &&\r\n        <div className=\"shadow card flex-row flex-wrap m-3\">\r\n            <div className=\"border\">\r\n                <img className='w-100' src={image} style={imageStyle}/>\r\n            </div>\r\n            <div className=\"card-block px-5 py-2 w-100\" style={divStyle}>\r\n                <h4 className=\"card-title\">{collection.title}</h4>\r\n                <h5>Theme:&nbsp;{collection.theme}</h5>\r\n                <p className=\"card-text p-2\"><Markdown source={ collection.description} /></p>\r\n            </div>\r\n            <div className=\"w-100 text-center border-top\">\r\n                <a className=\"nav-link text-primary\" href={`/collection/${collection.id}/items`}>Items</a>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionView","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\CollectionUserPanel.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UpdateCollection\\UpdateCollection.js",["201","202"],"import React, { useEffect, useContext } from 'react'\r\nimport CollectionService from '../../../services/CollectionService';\r\nimport Context from '../../../context'\r\nimport { Redirect} from \"react-router-dom\";\r\nimport UploadImage from '../CreateCollection/UploadImage';\r\nimport Field from './Field'\r\nimport ImageService from '../../../services/ImageService'\r\nimport Spinner from '../../Spinner';\r\n\r\nconst styles = \r\n{\r\n    maxWidth: \"1000px\",\r\n    border: 'none'\r\n}\r\n\r\nfunction UpdateCollection(props)\r\n{\r\n    const {user} = useContext(Context);\r\n    const [collection, setCollection] = React.useState(null);\r\n    const [title, setTitle] = React.useState('');\r\n    const [theme, setTheme] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [fields, setFields] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [failed, setFailed] = React.useState(false);\r\n    const [image, setImage] = React.useState(null);\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    useEffect(() =>\r\n    {\r\n        async function fetchData()\r\n        {\r\n            setLoading(true);\r\n            let response = await CollectionService.getCollection(props.match.params.id);\r\n            if(response.status === 200)\r\n            {\r\n                if(user && user.username === response.data.user.userName)\r\n                {\r\n                    console.log(user);\r\n                    console.log(response.data);\r\n                    console.log(user.userName === response.data.user.username);\r\n                    setCollection(response.data);\r\n                    setFields(response.data.fields);\r\n                    setTitle(response.data.title);\r\n                    setTheme(response.data.theme);\r\n                    setDescription(response.data.description);\r\n                }\r\n                else\r\n                {\r\n                    setFailed(true);\r\n                }\r\n                setLoading(false);\r\n            }\r\n            else\r\n            {\r\n                setFailed(true);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        if(!collection && !failed) fetchData();\r\n\r\n    },[user])\r\n    \r\n    async function submitHandler(event)\r\n    {\r\n        setLoading(true);\r\n        event.preventDefault();\r\n        let imageUrl;\r\n        if(!image)\r\n        {\r\n            imageUrl = collection.image; \r\n        }\r\n        else\r\n        {\r\n            imageUrl = await ImageService.uploadImage(image);\r\n        }\r\n        \r\n\r\n        let fixedFields = [];\r\n        fields.forEach(field =>\r\n            {\r\n                fixedFields.push(\r\n                    {\r\n                        Title : field.title,\r\n                        Type : field.type\r\n                    }\r\n                );\r\n            });\r\n        \r\n        let response = await CollectionService.updateCollection(collection.id,\r\n                theme,\r\n                title,\r\n                description,\r\n                fixedFields,\r\n                imageUrl);\r\n        setLoading(false);\r\n        setRedirect(true);\r\n        \r\n    }\r\n\r\n    function AddField(event) \r\n    {\r\n        event.preventDefault();\r\n        setFields(\r\n                fields.concat([\r\n                {\r\n                    id: Date.now(),\r\n                    title : '',\r\n                    type : 2\r\n                }\r\n            ])\r\n        );\r\n    }\r\n\r\n    function validateFields()\r\n    {\r\n        let flag = true;\r\n        fields.forEach(field =>\r\n            {\r\n                if(field.title.length === 0)\r\n                    flag = false;\r\n            });\r\n        return flag;\r\n    }\r\n\r\n    function validateForm() {\r\n        return title.length > 0 && theme.length > 0 && description.length > 0 && validateFields();\r\n    }\r\n\r\n    return(\r\n        <div className='d-flex justify-content-center m-3'>\r\n            {redirect && <Redirect to='/userPage' />}\r\n            {failed && (<Redirect to='/home'/>)}\r\n            {collection &&\r\n            (\r\n            <form className=\"w-100 d-flex flex-column align-items-center\" onSubmit = {e => submitHandler(e)}>    \r\n                <div className='shadow d-flex justify-content-around w-100 flex-wrap p-5' style={styles}>\r\n                    <div className='flex-fill d-flex flex-column align-items-center'>\r\n                        <div className=\"form-group mb-4 w-100\">\r\n                            Title\r\n                            <input type=\"input\" className=\"form-control\" placeholder='Title' defaultValue={collection.title} \r\n                            onChange = {e => setTitle(e.target.value) }/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-4 w-100\">\r\n                            Theme\r\n                            <input type=\"input\" className=\"form-control\" placeholder='Theme' defaultValue={collection.theme}\r\n                            onChange = {e => setTheme(e.target.value)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-4 w-100\">\r\n                            Description\r\n                            <textarea type=\"input\" className=\"form-control\" placeholder='Description' defaultValue={collection.description}\r\n                            onChange = {e => setDescription(e.target.value)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-4 w-100\">\r\n                            <UploadImage image = {image} setImage = {setImage}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                        <div className='flex-fill d-flex align-items-center flex-column'>\r\n                            <div className=\"form-group mb-4\">\r\n                                <button className=\"btn btn-success\" onClick = {AddField}>Add Field</button>\r\n                            </div>\r\n                            { fields.map(field =>\r\n                            {\r\n                                return <Field key = {field.id} field ={field} fields={fields} setFields = {setFields} id = {field.id}/>\r\n                            })\r\n                            }\r\n                        </div>\r\n                </div>\r\n                <div class=\"form-outline mt-4\">\r\n                    <input className=\"btn btn-outline-success w-100\" type='submit' value='Save' disabled={!validateForm()}/>\r\n                </div>\r\n                {loading &&(<Spinner/>)}\r\n            </form>\r\n            \r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateCollection;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\UpdateCollection\\Field.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemsPage.js",["203","204","205"],"import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Context from '../../context';\r\nimport CollectionService from '../../services/CollectionService';\r\nimport ItemService from '../../services/ItemService';\r\nimport Spinner from '../Spinner';\r\nimport ItemsUserPanel from '../UserPage/Collections/Items/ItemsUserPanel'\r\nimport ItemsList from './ItemsList';\r\n\r\nfunction ItemsPage(props)\r\n{\r\n    const {user} = React.useContext(Context);\r\n    const [loading,setLoading] = React.useState(false);\r\n    const [redirect,setRedirect] = React.useState(false);\r\n    const [failed, setFailed] = React.useState(false);\r\n    const [userPanel, setUserPanel] = React.useState(false);\r\n    const [collection, setCollection] = React.useState(null);\r\n    const [items, setItems] = React.useState(null);\r\n\r\n    async function fecthCollection()\r\n    {\r\n        setLoading(true);\r\n        let response = await CollectionService.getCollection(props.match.params.id);\r\n        if(response.status === 200)\r\n        {\r\n            setCollection(response.data);\r\n            if(user && response.data.user.userName === user.username)\r\n                setUserPanel(true);       \r\n            setLoading(false);\r\n        }\r\n        else\r\n        {\r\n            setFailed(true);\r\n        }\r\n    }\r\n\r\n    async function fetchItems()\r\n    {\r\n        setLoading(true)\r\n        let response = await ItemService.getItems(props.match.params.id);\r\n        if(response.status === 200)\r\n        {\r\n            console.log(response.data);\r\n            setItems(response.data)\r\n            setLoading(false);\r\n        }\r\n        else\r\n        {\r\n            setFailed(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        fecthCollection();\r\n        fetchItems();\r\n    },[user])\r\n\r\n    return(\r\n        <>\r\n        {failed && <Redirect to=\"/home\" />}\r\n        {userPanel && <ItemsUserPanel collectionId = {collection.id} />}\r\n        {loading && <Spinner />}\r\n        {items && <ItemsList items = {items} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsPage;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemsUserPanel.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\CreateItem.js",["206","207"],"import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Context from '../../../../context';\r\nimport CollectionService from '../../../../services/CollectionService';\r\nimport ItemService from '../../../../services/ItemService';\r\nimport Spinner from '../../../Spinner';\r\nimport ItemForm from './ItemForm';\r\n\r\nfunction CreateItem(props)\r\n{\r\n    const {user} = React.useContext(Context);\r\n    const [collection, setCollection] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [redirect, setRedirect] = React.useState(false);\r\n    const [failed, setFailed] = React.useState(false);\r\n\r\n    async function fecthCollection()\r\n    {\r\n        setLoading(true);\r\n        let response = await CollectionService.getCollection(props.match.params.id);\r\n        if(response.status === 200)\r\n        {\r\n            if(user && user.username === response.data.user.userName)\r\n            {\r\n                console.log(response.data);\r\n                setCollection(response.data);\r\n                setLoading(false);    \r\n            }\r\n            else setFailed(true);\r\n        }\r\n        else\r\n        {\r\n            setFailed(true);\r\n        }\r\n    }\r\n\r\n    async function submit(item)\r\n    {\r\n        setLoading(true);\r\n        console.log(item);\r\n        let response = await ItemService.createItem(item.Title,item.Fields, collection.id)\r\n        if(response.status === 200)\r\n        {\r\n            setLoading(false);\r\n            setRedirect(true);\r\n        }\r\n        else\r\n        {\r\n            console.log(response);\r\n            setFailed(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        fecthCollection();\r\n    }, [props])\r\n\r\n    return(\r\n        <>\r\n        {loading && <Spinner />}\r\n        {failed && <Redirect to='/home' />}\r\n        {redirect && <Redirect to={`/collection/${collection.id}/items`} />}\r\n        {collection && <ItemForm fields = {collection.fields} submitHandler = {submit} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateItem;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemForm.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\Field.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\services\\ItemService.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemsList.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemPreview.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\ItemView.js",["208","209","210"],"import React, { useEffect } from 'react'\r\nimport Context from '../../context';\r\nimport ItemService from '../../services/ItemService';\r\nimport Spinner from '../Spinner';\r\nimport ItemUserPanel from '../UserPage/Collections/Items/ItemUserPanel';\r\nimport FieldsView from './FieldsView';\r\nimport Markdown from 'react-markdown'\r\nimport TagList from './TagList';\r\nimport Comments from './Comments';\r\n\r\nconst divStyle = \r\n{\r\n    maxWidth : '1200px'\r\n}\r\n\r\nconst tagsDiv =\r\n{\r\n    maxWidth : '400px'\r\n}\r\n\r\nfunction ItemView(props)\r\n{\r\n    const {user} = React.useContext(Context);\r\n    const [item , setItem] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [failed, setFailed] = React.useState(false);\r\n    const [userPanel, setUserPanel] = React.useState(false);\r\n    const [liked, setLiked] = React.useState(false);\r\n    const [likeLoading, setLikeLoading] = React.useState(false);\r\n    const [likeCount, setLikeCount] = React.useState(0);\r\n\r\n    async function like()\r\n    {\r\n        if(user && !likeLoading)\r\n        {\r\n            setLikeLoading(true);\r\n            let response = await ItemService.like(props.match.params.id);\r\n            if(response.status === 200)\r\n            {\r\n                setLiked(!liked);\r\n                setLikeCount(response.data.likesCount);\r\n            }\r\n            setLikeLoading(false);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        async function fetchData()\r\n        {  \r\n            setLoading(true);\r\n            let response = await ItemService.getItemById(props.match.params.id);\r\n            if(response.status === 200)\r\n            {\r\n                console.log(response.data);\r\n                setItem(response.data);\r\n                setLikeCount(response.data.likesCount);\r\n                if(user && response.data.collection.user.userName === user.username)\r\n                {\r\n                    setUserPanel(true);\r\n                }\r\n                if(user && response.data.likes.filter(l => l.username === user.username)[0])\r\n                {\r\n                    setLiked(true);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                console.log(response);\r\n                setFailed(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [props])\r\n\r\n    return(\r\n        <>\r\n        {userPanel && <ItemUserPanel item = {item} />}\r\n        {loading && <Spinner />}\r\n        {item &&\r\n        <div className = 'd-flex flex-column align-items-center w-100 p-3'>\r\n            <div className = 'card shadow w-100 rounded p-2' style = {divStyle}>\r\n                \r\n                <div className = 'd-flex justify-content-around flex-wrap'>\r\n                    <div className = 'd-flex flex-column mw-100 flex-fill align-items-center m-1 border-right'>\r\n                        <h3 className = 'w-100 text-center'>{item.title}</h3>\r\n                        <div className=\"w-100 text-center\">\r\n                            <a className=\"nav-link text-dark\" href={`/collection/${item.collection.id}`}>\r\n                                <h5>Collection: &nbsp;{item.collection.title}</h5>\r\n                            </a>\r\n                            <FieldsView item = {item} />\r\n                        </div>\r\n                    </div>\r\n                \r\n                    <div className = 'mw-100 d-flex flex-column align-items-center p-3' style = {tagsDiv}>\r\n                          <h3>Tags</h3>\r\n                          <TagList item = {item} userPanel = {userPanel} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = 'd-flex justify-content-end align-items-center w-100 border-top p-4' \r\n                onClick = {like}>\r\n                    {liked\r\n                    ?<i className = 'fa fa-heart like-active'  aria-hidden=\"true\"> &nbsp;&nbsp;{likeCount}</i>\r\n                    :<i className = 'fa fa-heart like' aria-hidden=\"true\"> &nbsp;&nbsp;{likeCount}</i>\r\n                    }\r\n                      \r\n                </div>\r\n            </div>\r\n            <div className = 'shadow w-100 mt-4 rounded p-2' style = {divStyle}>\r\n                <Comments item = {item} user = {user} />\r\n            </div>\r\n        </div>\r\n        }   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemView;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\ItemUserPanel.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\UserPage\\Collections\\Items\\UpdateItem.js",["211","212","213","214"],"import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Context from '../../../../context';\r\nimport CollectionService from '../../../../services/CollectionService';\r\nimport ItemService from '../../../../services/ItemService';\r\nimport Spinner from '../../../Spinner';\r\nimport ItemForm from './ItemForm';\r\n\r\nfunction UpdateItem(props)\r\n{\r\n    const {user} = React.useContext(Context);\r\n    const [title, setTitle] = React.useState('');\r\n    const [fields, setFields] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [redirect, setRedirect] = React.useState(false);\r\n    const [failed, setFailed] = React.useState(false);\r\n\r\n    async function submit(item)\r\n    {\r\n        setLoading(true);\r\n        let response = await ItemService.updateItem(props.match.params.id, item.Title, item.Fields, 0)\r\n        setRedirect(true);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        async function fetchData()\r\n        {  \r\n            setLoading(true);\r\n            let response = await ItemService.getItemById(props.match.params.id);\r\n            if(response.status === 200)\r\n            {\r\n                console.log(response.data);\r\n                if(user && response.data.collection.user.userName === user.username)\r\n                {\r\n                    setTitle(response.data.title);\r\n                    let itemFields = response.data.collection.fields.map(field =>\r\n                        {\r\n                            let itemField = response.data.fields.filter(f => f.title === field.title && f.type === field.type)[0];\r\n                            if(itemField)\r\n                                field.value = itemField.value;\r\n                            return field;\r\n                        })\r\n                    console.log(itemFields);\r\n                    setFields(itemFields);\r\n                }\r\n                else\r\n                {\r\n                    setFailed(true);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                console.log(response);\r\n                setFailed(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [props]);\r\n\r\n    return(\r\n        <>\r\n        {loading && <Spinner />}\r\n        {failed && <Redirect to='/home' />}\r\n        {redirect && <Redirect to={`/item/${props.match.params.id}`} />}\r\n        {fields && <ItemForm title = {title} fields = {fields} submitHandler = {submit} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateItem;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\FieldsView.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\TagList.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\Tag.js",["215"],"import React from 'react'\r\nimport ItemService from '../../services/ItemService';\r\nimport Spinner from '../Spinner';\r\n\r\nfunction Tag(props)\r\n{\r\n\r\n    async function deleteTag()\r\n    {\r\n        let response = await ItemService.deleteTag(props.itemId, props.tag.id)\r\n        if(response.status === 200)\r\n        {\r\n            props.setTags(response.data.tags);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className = 'w-100 d-flex justify-content-between border rounded px-2 mb-4 align-items-center'>\r\n            <div className = 'mw-100 mr-2'>\r\n                <a className=\"nav-link text-primary\" href={`/items?tagname=${props.tag.title}`}>{props.tag.title}</a>\r\n            </div>\r\n            {props.userPanel &&\r\n                <i class=\"fa fa-times deleteTag\" aria-hidden=\"true\"\r\n                onClick = {deleteTag}></i>\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tag;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\Comments.js",["216"],"import React, { useEffect } from 'react'\r\nimport ItemService from '../../services/ItemService';\r\nimport Spinner from '../Spinner';\r\n\r\nfunction Comments(props)\r\n{   \r\n    const [comments,setComments] = React.useState([]);\r\n    const [comment, setComment] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    async function fetchComments()\r\n    {\r\n        let response = await ItemService.getComments(props.item.id)\r\n        if(response && response.status === 200)\r\n        {\r\n            setComments(response.data);\r\n        }\r\n    }\r\n\r\n    async function addComment()\r\n    {\r\n        setLoading(true);\r\n        let response = await ItemService.addComment(props.item.id,comment);\r\n        if(response && response.status === 200)\r\n        {\r\n            setComment('');\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    function validateForm()\r\n    {\r\n        return comment.length > 0;\r\n    }\r\n\r\n    function convertUTCDateToLocalDate(date) {\r\n        let newDate = new Date(date.getTime()+date.getTimezoneOffset()*60*1000);\r\n        let offset = date.getTimezoneOffset() / 60;\r\n        let hours = date.getHours();\r\n        newDate.setHours(hours - offset);\r\n        return newDate.toLocaleString();   \r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        setComments(props.item.comments);\r\n        setInterval(fetchComments,1000)\r\n    },[props])\r\n\r\n    return(\r\n        <>\r\n        {comments.length>0 && \r\n        <div className = 'd-flex flex-column align-items-center p-3'>\r\n            <h4>Comments</h4>\r\n        {comments.map(comment =>\r\n        {\r\n            let date = convertUTCDateToLocalDate(new Date(comment.createdDate));\r\n            return <div className = 'shadow-sm d-flex flex-column align-items-center w-100 mb-4 border rounded'>\r\n                        <div className = 'd-flex flex-column align-items-center w-100 p-1 border-bottom text-secondary'>\r\n                            <em>{comment.author}</em>\r\n                            <em>Created:&nbsp;{date}</em>\r\n                        </div>\r\n                        <div className = 'mw-100 p-3'>\r\n                            <em>{comment.text}</em>\r\n                        </div>\r\n                    </div>\r\n        })\r\n        }\r\n        </div>\r\n        }\r\n        {props.user &&\r\n        <div className = 'd-flex flex-column align-items-center m-3 p-2 shadow rounded'>\r\n            <textarea type=\"input\" className=\"form-control mb-4\"\r\n                value = {comment}\r\n                placeholder = 'Write comment...'\r\n                onChange = {e => setComment(e.target.value)}/>\r\n            <button className=\"btn btn-success\" onClick = {e => addComment(e)} disabled = {!validateForm()}>\r\n                    Comment\r\n            </button>\r\n            {loading && <Spinner />}\r\n        </div>\r\n        \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\SearchItemsPage.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Content\\TagListHome.js",[],"C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\CollectionsList.js",["217"],"import React, { useEffect } from 'react'\r\nimport CollectionService from '../../services/CollectionService';\r\nimport CollectionPreview from '../Content/CollectionPreview';\r\nimport Spinner from '../Spinner';\r\nimport CollectionList from '../UserPage/Collections/CollectionList'\r\n\r\nfunction CollectionsList(props)\r\n{\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [collections, setCollections] = React.useState([]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        async function fetchCollections()\r\n        {\r\n            setLoading(true);\r\n            let response = await CollectionService.getLargestCollections();\r\n            console.log(response);\r\n            if(response.status === 200)\r\n            {\r\n                let i = 0;\r\n                let collecs = response.data.map(collection =>\r\n                    {\r\n                        collection.key = i++;\r\n                        return collection;\r\n                    })\r\n                setCollections(collecs);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchCollections();\r\n    }, [props])\r\n\r\n    return(\r\n        <>\r\n        {loading && <Spinner/>}\r\n        {\r\n            collections.map(collection =>\r\n            {\r\n                return <CollectionPreview key = {collection.key} collection = {collection} />\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionsList;","C:\\Лабы\\transition\\CourseProject-transition\\web-app-front\\src\\components\\Home\\ItemsList.js",["218"],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":13,"column":17,"nodeType":"225","endLine":13,"endColumn":166},{"ruleId":"223","severity":1,"message":"224","line":18,"column":21,"nodeType":"225","endLine":18,"endColumn":59},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"230","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":37},{"ruleId":"226","severity":1,"message":"231","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"226","severity":1,"message":"232","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":27},{"ruleId":"226","severity":1,"message":"231","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":15},{"ruleId":"226","severity":1,"message":"233","line":2,"column":20,"nodeType":"228","messageId":"229","endLine":2,"endColumn":30},{"ruleId":"234","severity":1,"message":"235","line":29,"column":13,"nodeType":"225","endLine":29,"endColumn":106},{"ruleId":"236","severity":1,"message":"237","line":48,"column":8,"nodeType":"238","endLine":48,"endColumn":14,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":59,"column":17,"nodeType":"225","endLine":59,"endColumn":72},{"ruleId":"236","severity":1,"message":"242","line":62,"column":7,"nodeType":"238","endLine":62,"endColumn":13,"suggestions":"243"},{"ruleId":"226","severity":1,"message":"244","line":90,"column":13,"nodeType":"228","messageId":"229","endLine":90,"endColumn":21},{"ruleId":"226","severity":1,"message":"245","line":14,"column":12,"nodeType":"228","messageId":"229","endLine":14,"endColumn":20},{"ruleId":"226","severity":1,"message":"246","line":14,"column":21,"nodeType":"228","messageId":"229","endLine":14,"endColumn":32},{"ruleId":"236","severity":1,"message":"247","line":57,"column":7,"nodeType":"238","endLine":57,"endColumn":13,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"249","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"236","severity":1,"message":"250","line":57,"column":8,"nodeType":"238","endLine":57,"endColumn":15,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"252","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"253","line":26,"column":12,"nodeType":"228","messageId":"229","endLine":26,"endColumn":18},{"ruleId":"236","severity":1,"message":"254","line":77,"column":8,"nodeType":"238","endLine":77,"endColumn":15,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"249","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"256","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":25},{"ruleId":"226","severity":1,"message":"244","line":21,"column":13,"nodeType":"228","messageId":"229","endLine":21,"endColumn":21},{"ruleId":"236","severity":1,"message":"254","line":60,"column":8,"nodeType":"238","endLine":60,"endColumn":15,"suggestions":"257"},{"ruleId":"226","severity":1,"message":"258","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":15},{"ruleId":"236","severity":1,"message":"259","line":48,"column":7,"nodeType":"238","endLine":48,"endColumn":14,"suggestions":"260"},{"ruleId":"226","severity":1,"message":"261","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":22},{"ruleId":"226","severity":1,"message":"262","line":7,"column":12,"nodeType":"228","messageId":"229","endLine":7,"endColumn":19},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Context' is defined but never used.","'ItemService' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collection', 'error', and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["265"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'collection', 'failed', and 'props.match.params.id'. Either include them or remove the dependency array.",["266"],"'response' is assigned a value but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fecthCollection' and 'fetchItems'. Either include them or remove the dependency array.",["267"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fecthCollection'. Either include it or remove the dependency array.",["268"],"'Markdown' is defined but never used.","'failed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["269"],"'CollectionService' is defined but never used.",["270"],"'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["271"],"'CollectionList' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [collection, error, props.match.params.id, user]",{"range":"285","text":"286"},"Update the dependencies array to be: [collection, failed, props.match.params.id, user]",{"range":"287","text":"288"},"Update the dependencies array to be: [fecthCollection, fetchItems, user]",{"range":"289","text":"290"},"Update the dependencies array to be: [fecthCollection, props]",{"range":"291","text":"292"},"Update the dependencies array to be: [props, user]",{"range":"293","text":"294"},{"range":"295","text":"294"},"Update the dependencies array to be: [fetchComments, props]",{"range":"296","text":"297"},[1568,1574],"[collection, error, props.match.params.id, user]",[2198,2204],"[collection, failed, props.match.params.id, user]",[1779,1785],"[fecthCollection, fetchItems, user]",[1716,1723],"[fecthCollection, props]",[2332,2339],"[props, user]",[2204,2211],[1368,1375],"[fetchComments, props]"]